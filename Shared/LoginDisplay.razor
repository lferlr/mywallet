@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MyWallet.ViewModel
@inject NavigationManager Navigation
@inject AuthenticationStateProvider _AuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        <div class="d-flex justify-content-center align-content-center">
            <Avatar Src="@context.User.Claims.First(x => x.Type == "picture").Value"/>
            <Text Type="success">@context.User.Identity?.Name</Text>
            <button class="nav-link btn btn-link" @onclick="BeginLogOut">Sair</button>
        </div>
    </Authorized>
    <NotAuthorized>
        <button class="nav-link btn btn-link" @onclick="SigninGoogle">Sign In com Google</button>
    </NotAuthorized>
</AuthorizeView>

@code{
    private string _accessToken;
    
    private void BeginLogOut() =>
        Navigation.NavigateToLogout("authentication/logout");

    private void SigninGoogle() =>
        Navigation.NavigateTo("authentication/login");

    private void UserAuthenticationAuthorized()
    {
        var auth = _AuthenticationStateProvider.GetAuthenticationStateAsync();
        var sub = auth.Result.User.FindFirst("sub")?.Value;
        
        UserAuthentication.UserId = ExtractUserId(sub);
        UserAuthentication.Name = auth.Result.User.FindFirst("name")?.Value;
        UserAuthentication.Email = auth.Result.User.FindFirst("email")?.Value;
    }
    
    private string ExtractUserId(string userIdClaim)
    {
        if (!string.IsNullOrEmpty(userIdClaim))
        {
            var parts = userIdClaim.Split('|');
            if (parts.Length > 1)
            {
                return parts[1];
            }
        }
        return userIdClaim;
    }
}