@page "/expense"

@using MyWallet.Services
@inject IExpenseService ExpenseService;
@inject HttpClient Http;

@attribute [Authorize]

<PageTitle>Despesas</PageTitle>

<h1>Minhas Despesas</h1>

@if (expenses != null)
{
    <Table DataSource="@expenses.ToList()" Bordered=@true HidePagination="@true">
        <PropertyColumn Property="c => c.Category" Title="Categoria" >
            <a>@context.Category</a>
        </PropertyColumn>
        <PropertyColumn Property="c => c.Description" Title="Descrição">
            <a>@context.Description</a>
        </PropertyColumn>
        <PropertyColumn Property="c => c.Tag" Title="Tag" >
            <Tag Color="@PresetColor.Cyan.ToString()">@context.Tag.ToString()</Tag>
        </PropertyColumn>
        <PropertyColumn Property="c => c.Value" Title="Valor (R$)">
            <a>@context.Value</a>
        </PropertyColumn>
        <PropertyColumn Property="c => c.DueDate" Title="Data de Vencimento" Format="yyyy/MM/dd">
            <a>@context.DueDate.ToString("d/M/yy")</a>
        </PropertyColumn>
        <PropertyColumn Property="c => c.RegistrationDate" Title="Data de Registro" Format="dd-MM-yyyy">
            <a>@context.RegistrationDate.ToString("d/M/yy")</a>
        </PropertyColumn>
        <PropertyColumn Property="c => c.Status" Title="Status">
            @if (context.Status)
            {
                <Tag Color="@PresetColor.Red.ToString()">A Pagar</Tag>
            }
            else
            {
                <Tag Color="@PresetColor.Green.ToString()">Paga</Tag>
            }
        </PropertyColumn>
    </Table>
}
else
{
    <p>
        <em>Loading...</em>
    </p>
}

@code {
    private IEnumerable<MyWallet.ViewModel.Expense> expenses;

    protected override async Task OnInitializedAsync()
    {
        expenses = await ExpenseService.GetAll();
    }

}